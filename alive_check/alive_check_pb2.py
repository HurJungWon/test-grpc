# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: alive_check.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='alive_check.proto',
  package='alivecheck',
  syntax='proto3',
  serialized_options=b'P\001',
  create_key=_descriptor._internal_create_key,
  serialized_pb=b'\n\x11\x61live_check.proto\x12\nalivecheck\"\x1c\n\x0c\x41liveRequest\x12\x0c\n\x04name\x18\x01 \x01(\t\"!\n\rAliveResponse\x12\x10\n\x08is_alive\x18\x01 \x01(\x08\x32Q\n\x0c\x41liveService\x12\x41\n\nGetHealthy\x12\x18.alivecheck.AliveRequest\x1a\x19.alivecheck.AliveResponseB\x02P\x01\x62\x06proto3'
)




_ALIVEREQUEST = _descriptor.Descriptor(
  name='AliveRequest',
  full_name='alivecheck.AliveRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='alivecheck.AliveRequest.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=33,
  serialized_end=61,
)


_ALIVERESPONSE = _descriptor.Descriptor(
  name='AliveResponse',
  full_name='alivecheck.AliveResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='is_alive', full_name='alivecheck.AliveResponse.is_alive', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=63,
  serialized_end=96,
)

DESCRIPTOR.message_types_by_name['AliveRequest'] = _ALIVEREQUEST
DESCRIPTOR.message_types_by_name['AliveResponse'] = _ALIVERESPONSE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

AliveRequest = _reflection.GeneratedProtocolMessageType('AliveRequest', (_message.Message,), {
  'DESCRIPTOR' : _ALIVEREQUEST,
  '__module__' : 'alive_check_pb2'
  # @@protoc_insertion_point(class_scope:alivecheck.AliveRequest)
  })
_sym_db.RegisterMessage(AliveRequest)

AliveResponse = _reflection.GeneratedProtocolMessageType('AliveResponse', (_message.Message,), {
  'DESCRIPTOR' : _ALIVERESPONSE,
  '__module__' : 'alive_check_pb2'
  # @@protoc_insertion_point(class_scope:alivecheck.AliveResponse)
  })
_sym_db.RegisterMessage(AliveResponse)


DESCRIPTOR._options = None

_ALIVESERVICE = _descriptor.ServiceDescriptor(
  name='AliveService',
  full_name='alivecheck.AliveService',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_start=98,
  serialized_end=179,
  methods=[
  _descriptor.MethodDescriptor(
    name='GetHealthy',
    full_name='alivecheck.AliveService.GetHealthy',
    index=0,
    containing_service=None,
    input_type=_ALIVEREQUEST,
    output_type=_ALIVERESPONSE,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
])
_sym_db.RegisterServiceDescriptor(_ALIVESERVICE)

DESCRIPTOR.services_by_name['AliveService'] = _ALIVESERVICE

# @@protoc_insertion_point(module_scope)
